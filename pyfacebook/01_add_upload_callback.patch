--- __init__.py.orig	2009-04-20 00:18:04.000000000 +0100
+++ __init__.py	2009-05-06 13:01:04.000000000 +0100
@@ -635,7 +635,7 @@
 class PhotosProxy(PhotosProxy):
     """Special proxy for facebook.photos."""
 
-    def upload(self, image, aid=None, caption=None, size=(604, 1024), filename=None):
+    def upload(self, image, aid=None, caption=None, size=(604, 1024), filename=None, callback=None):
         """Facebook API call. See http://developers.facebook.com/documentation.php?v=1.0&method=photos.upload
 
         size -- an optional size (width, height) to resize the image to before uploading. Resizes by default
@@ -678,21 +678,38 @@
         content_type, body = self.__encode_multipart_formdata(list(args.iteritems()), [(image, data)])
         urlinfo = urlparse.urlsplit(self._client.facebook_url)
         try:
-            h = httplib.HTTP(urlinfo[1])
+            content_length = len(body)
+            chunk_size = 4096
+            
+            h = httplib.HTTPConnection(urlinfo[1])
             h.putrequest('POST', urlinfo[2])
             h.putheader('Content-Type', content_type)
-            h.putheader('Content-Length', str(len(body)))
+            h.putheader('Content-Length', str(content_length))
             h.putheader('MIME-Version', '1.0')
             h.putheader('User-Agent', 'PyFacebook Client Library')
             h.endheaders()
-            h.send(body)
-
-            reply = h.getreply()
-
-            if reply[0] != 200:
-                raise Exception('Error uploading photo: Facebook returned HTTP %s (%s)' % (reply[0], reply[1]))
-
-            response = h.file.read()
+            
+            if callback:
+                count = 0
+                while len(body) > 0:
+                    if len(body) < chunk_size:
+                        data = body
+                        body = ''
+                    else:
+                        data = body[0:chunk_size]
+                        body = body[chunk_size:]
+                    
+                    h.send(data)
+                    count += 1
+                    callback(count, chunk_size, content_length)
+            else:
+                h.send(body)
+            
+            response = h.getresponse()
+            
+            if response.status != 200:
+                raise Exception('Error uploading photo: Facebook returned HTTP %s (%s)' % (response.status, response.reason))
+            response = response.read()
         except:
             # sending the photo failed, perhaps we are using GAE
             try:
